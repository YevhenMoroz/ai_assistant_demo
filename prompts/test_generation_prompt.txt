Q: Can you generate test №123 with next blocks:
self.fix_manager = FixManager(self.fix_env.sell_side, self.test_id)
self.fix_message = FixMessageNewOrderSingleOMS(self.data_set)
self.fix_message.set_default_dma_limit()
self.fix_message.change_parameter("Price","10")
self.fix_manager.send_message_fix_standard(self.fix_message)

self.fix_verifier = FixVerifier(self.fix_env.sell_side, self.test_id)
self.fix_env = self.environment.get_list_fix_environment()[0]
self.fix_execution_report = FixMessageExecutionReportOMS(self.data_set)
self.fix_execution_report.set_default_new(self.fix_message)
self.fix_verifier.check_fix_message_fix_standard(self.fix_execution_report)

A:
import logging
import os
import time
from pathlib import Path
from custom import basic_custom_actions as bca
from test_framework.core.test_case import TestCase
from test_framework.core.try_exept_decorator import try_except
from test_framework.fix_wrappers.FixManager import FixManager
from test_framework.fix_wrappers.FixVerifier import FixVerifier
from test_framework.fix_wrappers.oms.FixMessageExecutionReportOMS import FixMessageExecutionReportOMS
from test_framework.fix_wrappers.oms.FixMessageNewOrderSingleOMS import FixMessageNewOrderSingleOMS
logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)
timeouts = True
class QAP_T123(TestCase):
    @try_except(test_id=Path(__file__).name[:-3])
    def __init__(self, report_id, session_id, data_set, environment):
        super().__init__(report_id, session_id, data_set, environment)
        self.test_id = bca.create_event(os.path.basename(__file__)[:-3], self.report_id)
    @try_except(test_id=Path(__file__).name[:-3])
    def run_pre_conditions_and_steps(self):
        self.fix_manager = FixManager(self.fix_env.sell_side, self.test_id)
        self.fix_message = FixMessageNewOrderSingleOMS(self.data_set)
        self.fix_message.set_default_dma_limit()
        self.fix_message.change_parameter("Price","10")
        self.fix_manager.send_message_fix_standard(self.fix_message)
        self.fix_verifier = FixVerifier(self.fix_env.sell_side, self.test_id)
        self.fix_env = self.environment.get_list_fix_environment()[0]
        self.fix_execution_report = FixMessageExecutionReportOMS(self.data_set)
        self.fix_execution_report.set_default_new(self.fix_message)
        self.fix_verifier.check_fix_message_fix_standard(self.fix_execution_report)


###

Q: Can you generate test №{0} with next blocks:
{1}
A:

